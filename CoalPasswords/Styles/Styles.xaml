<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:local="clr-namespace:CoalPasswords">

    <!-- Region Buttons -->
    
    <!-- Region SideMenuButtons -->
    <Style TargetType="{x:Type Button}" x:Key="SideMenuButton">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Padding" Value="50 10"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontFamily" Value="QuickSand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- EndRegion -->

    <!-- Region AddRecordButton -->
    <Style TargetType="{x:Type Button}" x:Key="AddRecordButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{DynamicResource AccentColor}">
                        </Ellipse>
                        <Label Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"></Label>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"></Setter>
    </Style>
    <!-- EndRegion -->

    <!-- Region CloseWindowButton -->
    <Style x:Key="CloseWindowButton" TargetType="Button">
        <Setter Property="Width" Value="25"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Margin" Value="20 0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox Width="20" Height="20">
                    <Canvas Width="24" Height="23">
                        <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="{DynamicResource ForegroundColor}"/>
                    </Canvas>
                </Viewbox>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True"></Trigger>
        </Style.Triggers>
    </Style>
    <!-- EndRegion -->

    <!-- Region FormButton -->
    <Style TargetType="{x:Type Button}" x:Key="FormButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="brdr" CornerRadius="5" Padding="10 15" BorderThickness="0" Cursor="Hand"
                            Background="{DynamicResource AccentColor}" Margin="10 0">
                        <Border.Effect>
                            <DropShadowEffect Opacity=".3" Direction="270" BlurRadius="5"></DropShadowEffect>
                        </Border.Effect>
                        <TextBlock Name="content" Text="{TemplateBinding Content}" VerticalAlignment="Center"
                                   HorizontalAlignment="Center" Foreground="{DynamicResource ForegroundColor}" FontSize="14"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="content" Value="{DynamicResource AccentColor}"></Setter>
                            <Setter Property="Background" TargetName="brdr" Value="{DynamicResource ForegroundColor}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- EndRegion -->
    
    <!-- Region LogIn Button -->
    <Style TargetType="{x:Type Button}" x:Key="LogInButton">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Padding" Value="50 10"></Setter>
        <Setter Property="Background" Value="{DynamicResource AccentColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="QuickSand"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                        <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentColor}"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="BorderThickness" Value="3"></Setter>
                <Setter Property="Padding" Value="47 7"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- EndRegion -->
    
    <!-- Region Sign Up Button -->
    <Style TargetType="{x:Type Button}" x:Key="SignUpButton">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontFamily" Value="QuickSand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBlock TextDecorations="Underline"
                                 Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"
                                 FontFamily="{TemplateBinding FontFamily}">
                            <ContentPresenter></ContentPresenter>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- EndRegion -->
    
    <!-- EndRegion -->
    
    <!-- Region Fonts -->
    <!--<FontFamily x:Key="AppleBlack">pack://application:,,,/Assets/Fonts/#SFUIDisplay-Black</FontFamily>
    <FontFamily x:Key="AppleBold">pack://application:,,,/Assets/Fonts/#SFUIDisplay-Bold</FontFamily>
    <FontFamily x:Key="AppleLight">pack://application:,,,/Assets/Fonts/#SFUIDisplay-Light</FontFamily>-->
    <!--<FontFamily x:Key="AppleMedium">pack://application:,,,/Assets/Fonts#/#SFUIDisplay-Medium</FontFamily>-->
    <!--<FontFamily x:Key="AppleRegular">pack://application:,,,/Assets/Fonts/#SFUIDisplay-Regular</FontFamily>
    <FontFamily x:Key="AppleThin">pack://application:,,,/Assets/Fonts/#SFUIDisplay-Thin</FontFamily>-->

    <Style TargetType="{x:Type Control}" x:Key="BaseStyle">
        <Setter Property="FontFamily" Value="QuickSand"></Setter>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockBaseStyle">
        <Setter Property="FontFamily" Value="QuickSand"></Setter>
    </Style>

    <!--<Style TargetType="{x:Type Button}" BasedOn="{DynamicResource BaseStyle}"></Style>
    <Style TargetType="{x:Type Label}" BasedOn="{DynamicResource BaseStyle}"></Style>
    <Style TargetType="{x:Type ListBox}" BasedOn="{DynamicResource BaseStyle}"></Style>
    <Style TargetType="{x:Type TextBox}" BasedOn="{DynamicResource BaseStyle}"></Style>
    <Style TargetType="{x:Type TextBlock}" BasedOn="{DynamicResource TextBlockBaseStyle}"></Style>
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{DynamicResource BaseStyle}"></Style>-->
    <!-- EndRegion -->
    
    <!-- Region ListView -->
    <!-- Region ListView Data Template -->
    <DataTemplate DataType="{x:Type local:IRecord}" x:Key="ListViewDataTemplate">
        <Border CornerRadius="5" Background="{Binding CardColor.BackgroundColor}" Width="150"
                Height="200" Margin="20" Cursor="Hand" DataContext="{Binding}">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Opacity=".4" BlurRadius="20" Direction="270"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <cal:ActionMessage MethodName="ToggleRecordPopupVisibility"></cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                </Grid.RowDefinitions>
                <Image Grid.Row="0" Source="{Binding ImageUrl}" Stretch="None"></Image>
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{Binding CardColor.ForegroundColor}"
                        Grid.Row="1" FontSize="14" Text="{Binding Title}" FontFamily="QuickSand"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>
    <!-- EndRegion -->
    <!-- EndRegion -->
    
    <!-- Region Login View Base Style-->

    <Style TargetType="{x:Type Window}" x:Key="LoginBaseStyle">
        <Setter Property="ResizeMode" Value="{Binding ResizeMode}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border CornerRadius="{Binding WindowCornerRadius}" Background="{DynamicResource BackgroundGradient}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Name="TitleBar" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="8*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="Transparent" CornerRadius="{Binding WindowCornerRadius}">
                                    <Label Height="25" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Left" Margin="20 0" Foreground="{DynamicResource ForegroundColor}" VerticalContentAlignment="Center" Content="{Binding WindowTitle}"></Label>
                                </Border>
                                <Border Grid.Column="1" Background="Transparent" CornerRadius="{Binding WindowCornerRadius}">
                                    <Button Style="{StaticResource CloseWindowButton}" WindowChrome.IsHitTestVisibleInChrome="True"
                                            Cursor="Hand">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <cal:ActionMessage MethodName="Close">
                                                    <cal:Parameter Value="{Binding ElementName=LogInPage}"></cal:Parameter>
                                                </cal:ActionMessage>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Border>
                            </Grid>
                            <Grid Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EndRegion -->
    
    <!-- Region Texts -->
    <Style TargetType="{x:Type Label}" x:Key="SideMenuLabel">
        <Setter Property="Padding" Value="50 10"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource AccentColor}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="FormLabelStyle">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"></Setter>
        <Setter Property="Margin" Value="15 0"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="FormTextBoxStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1.5"></Setter>
        <Setter Property="Padding" Value="10 5"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"></Setter>
        <Setter Property="Margin" Value="12"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Text}"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EndRegion-->
    
    <!-- Region Main View Base Style-->
    <Style TargetType="{x:Type Window}" x:Key="WindowBaseStyle">
        <Setter Property="ResizeMode" Value="{Binding ResizeMode}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border CornerRadius="{Binding WindowCornerRadius}" Background="{DynamicResource BackgroundGradient}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Name="TitleBar" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                    <ColumnDefinition Width="8*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" CornerRadius="{Binding WindowCornerRadius}">
                                    <Label Height="25" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Left" Margin="20 0" Foreground="{DynamicResource ForegroundColor}" VerticalContentAlignment="Center" Content="{Binding WindowTitle}"></Label>
                                </Border>
                                <Border Grid.Column="1" CornerRadius="{Binding WindowCornerRadius}">
                                    <Button Style="{StaticResource CloseWindowButton}" WindowChrome.IsHitTestVisibleInChrome="True" Cursor="Hand">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <cal:ActionMessage MethodName="Close">
                                                    <cal:Parameter Value="{Binding ElementName=mWnd}"></cal:Parameter>
                                                </cal:ActionMessage>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Border>
                            </Grid>
                            <Grid Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- EndRegion -->

</ResourceDictionary>